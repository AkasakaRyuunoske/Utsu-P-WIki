server.port = 8080

#If there are new tables or new columns they will be added, but the existing ones will not be changed
#Consider 'create-drop' to create new DB every compilation
spring.jpa.hibernate.ddl-auto       = update
spring.datasource.url               = ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/utsu_p_wiki}
spring.datasource.username          = ${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password          = ${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.jpa.show-sql                 = true
#Thymeleaf default suffix is .html . So "index" is same as "index.html" in NOT REST Controllers

# enabled to use data.sql
spring.datasource.initialization-mode=always

#Disable spring default error pages to define custom ones
server.error.whitelabel.enabled=false
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

    #Enable for debugging. First shows all info in console. Second will write all info in logging file.
    #Both have to be enabled if needed.
#debug = true
#logging.level.org.springframework=DEBUG

    # https://docs.spring.io/spring-boot/docs/2.1.9.RELEASE/reference/html/boot-features-logging.html#boot-features-logging-file-output
    # Spring documentation states that ONLY ONE PROPERTY must be used.
    # (either .file.name OR .file.path). But using only one does not work.
    # Nor the file nor the directory will be created automatically if only one be used.(No difference witch one)
    # So 2 properties below do create automatically if not exists a directory(.file.path)
    # and the logging file (.file.name).
logging.file.name=logs/logs.log
logging.file.path=logs

#======  database helper configurations  ======

#create data.sql? if false other properties will not have any effect
  #IS NOT FINISHED YET, MIGHT NOT WORK
database-helper.populate-database  = false

#short command to enable all
database-helper.populate-all      = true

#enable one by one
database-helper.populate-authors   = false
database-helper.populate-clients   = false
database-helper.populate-comments  = false
database-helper.populate-countries = false
database-helper.populate-delivery  = false
database-helper.populate-genres    = false
database-helper.populate-orders    = false
database-helper.populate-pages     = false
database-helper.populate-products  = false
database-helper.populate-types     = false

#fancy writings configuration.
  #SET EVERYTHING TO FALSE IN PRODUCTION
  #Chaos, true, Yume?
fancy-writings.do-print = Chaos

# currently does nothing, but soon will be implemented for:
# Default, The Dying Message, Utsu-P Logo and probably more
#fancy-writings.print-what =

    #Enable if not enough memory. Use carefully, problem beans will not be created at the start of app.
#spring.main.lazy-initialization=true

#==== Customisation Properties Only ===
#https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.spring-application.banner

#Enables color coded logs in console
spring.output.ansi.enabled = ALWAYS
#Defines the color code preserving spring logging style (date-thread-importance-source-message)
logging.pattern.console= %clr(%d{yyyy-MMM-dd HH:mm:ss.SSS}){green} [%thread] %highlight(%-5level) %magenta(%-40.40logger{39}) - %msg %n

  #To define custom image as banner properties below can be used
#spring.main.banner-mode = console
#spring.banner.image.location = classpath:banner.gif
